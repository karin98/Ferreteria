<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnbuscarcat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>